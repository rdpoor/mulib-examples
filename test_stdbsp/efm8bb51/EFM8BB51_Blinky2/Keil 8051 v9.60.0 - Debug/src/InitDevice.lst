C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/12/2022 05:49:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\r\Proje
                    -cts\mulib-examples\test_stdbsp\efm8bb51\EFM8BB51_Blinky2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNI
                    -NGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\r\Projects\mulib
                    --examples\test_stdbsp\efm8bb51\EFM8BB51_Blinky2\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//Devic
                    -e/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.3//Device/EFM8BB51/inc;C:\Users\r\Projec
                    -ts\mulib-examples\mu_platform\common) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) PREPRINT(.\src\Init
                    -Device.I) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB51_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              PCA_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PBCFG_0_enter_DefaultMode_from_RESET();
  30   1              TIMER16_2_enter_DefaultMode_from_RESET();
  31   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  32   1              // Restore the SFRPAGE
  33   1              SFRPAGE = SFRPAGE_save;
  34   1              // [Config Calls]$
  35   1      }
  36          
  37          
  38          //================================================================================
  39          // PCA_0_enter_DefaultMode_from_RESET
  40          //================================================================================
  41          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
  42   1              // $[PCA0MD - PCA Mode]
  43   1              /*
  44   1              // WDTE (Watchdog Timer Enable) = DISABLED (Disable Watchdog Timer.)
  45   1              // CPS (PCA Counter/Timer Pulse Select) = SYSCLK_DIV_12 (System clock
  46   1              //     divided by 12.)
  47   1              // CIDL (PCA Counter/Timer Idle Control) = NORMAL (PCA continues to
  48   1              //     function normally while the system controller is in Idle Mode.)
  49   1              // ECF (PCA Counter/Timer Overflow Interrupt Enable) = OVF_INT_DISABLED
  50   1              //     (Disable the CF interrupt.)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/12/2022 05:49:38 PAGE 2   

  51   1              */
  52   1              SFRPAGE = 0x00;
  53   1              PCA0MD = PCA0MD_CPS__SYSCLK_DIV_12 | PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED;
  54   1              // [PCA0MD - PCA Mode]$
  55   1      
  56   1              // $[PCA0H - PCA Counter/Timer High Byte]
  57   1              // [PCA0H - PCA Counter/Timer High Byte]$
  58   1      
  59   1              // $[PCA0L - PCA Counter/Timer Low Byte]
  60   1              // [PCA0L - PCA Counter/Timer Low Byte]$
  61   1      
  62   1              // $[PCA0PWM - PCA PWM Configuration]
  63   1              // [PCA0PWM - PCA PWM Configuration]$
  64   1      
  65   1              // $[PCA0CN0 - PCA Control 0]
  66   1              // [PCA0CN0 - PCA Control 0]$
  67   1      }
  68          
  69          //================================================================================
  70          // PORTS_1_enter_DefaultMode_from_RESET
  71          //================================================================================
  72          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
  73   1        // $[P1 - Port 1 Pin Latch]
  74   1        /*
  75   1         // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
  76   1         //     float high.)
  77   1         // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
  78   1         //     float high.)
  79   1         // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
  80   1         //     float high.)
  81   1         // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
  82   1         //     float high.)
  83   1         // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
  84   1         //     float high.)
  85   1         // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
  86   1         //     float high.)
  87   1         // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
  88   1         //     float high.)
  89   1         */
  90   1        P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
  91   1            | P1_B5__HIGH | P1_B6__HIGH;
  92   1        // [P1 - Port 1 Pin Latch]$
  93   1      
  94   1        // $[P1MDOUT - Port 1 Output Mode]
  95   1        /*
  96   1         // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
  97   1         //     drain.)
  98   1         // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
  99   1         //     drain.)
 100   1         // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 101   1         //     drain.)
 102   1         // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 103   1         //     drain.)
 104   1         // B4 (Port 1 Bit 4 Output Mode) = PUSH-PULL (P1.4 output is push-pull.)
 105   1         // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 106   1         //     drain.)
 107   1         // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 108   1         //     drain.)
 109   1         */
 110   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 111   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 112   1            | P1MDOUT_B4__PUSH_PULL  | P1MDOUT_B5__OPEN_DRAIN
 113   1            | P1MDOUT_B6__OPEN_DRAIN;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/12/2022 05:49:38 PAGE 3   

 114   1        // [P1MDOUT - Port 1 Output Mode]$
 115   1      
 116   1        // $[P1MDIN - Port 1 Input Mode]
 117   1        /*
 118   1         // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 119   1         //     digital mode.)
 120   1         // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 121   1         //     digital mode.)
 122   1         // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 123   1         //     digital mode.)
 124   1         // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 125   1         //     digital mode.)
 126   1         // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 127   1         //     digital mode.)
 128   1         // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 129   1         //     digital mode.)
 130   1         // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 131   1         //     digital mode.)
 132   1         */
 133   1        P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 134   1            | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 135   1            | P1MDIN_B6__DIGITAL;
 136   1        // [P1MDIN - Port 1 Input Mode]$
 137   1      
 138   1        // $[P1SKIP - Port 1 Skip]
 139   1        /*
 140   1         // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 141   1         //     crossbar.)
 142   1         // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 143   1         //     crossbar.)
 144   1         // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 145   1         //     crossbar.)
 146   1         // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 147   1         //     crossbar.)
 148   1         // B4 (Port 1 Bit 4 Skip) = SKIPPED (P1.4 pin is skipped by the
 149   1         //     crossbar.)
 150   1         // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 151   1         //     crossbar.)
 152   1         // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 153   1         //     crossbar.)
 154   1         */
 155   1        P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 156   1            | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 157   1            | P1SKIP_B4__SKIPPED | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED;
 158   1        // [P1SKIP - Port 1 Skip]$
 159   1      
 160   1        // $[P1MASK - Port 1 Mask]
 161   1        /*
 162   1         // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 163   1         //     ignored and will not cause a port mismatch event.)
 164   1         // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 165   1         //     ignored and will not cause a port mismatch event.)
 166   1         // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 167   1         //     ignored and will not cause a port mismatch event.)
 168   1         // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 169   1         //     ignored and will not cause a port mismatch event.)
 170   1         // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 171   1         //     ignored and will not cause a port mismatch event.)
 172   1         // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 173   1         //     ignored and will not cause a port mismatch event.)
 174   1         // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 175   1         //     ignored and will not cause a port mismatch event.)
 176   1         */
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/12/2022 05:49:38 PAGE 4   

 177   1        P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 178   1            | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 179   1            | P1MASK_B6__IGNORED;
 180   1        // [P1MASK - Port 1 Mask]$
 181   1      
 182   1        // $[P1MAT - Port 1 Match]
 183   1        /*
 184   1         // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 185   1         //     with logic HIGH.)
 186   1         // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 187   1         //     with logic HIGH.)
 188   1         // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 189   1         //     with logic HIGH.)
 190   1         // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 191   1         //     with logic HIGH.)
 192   1         // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 193   1         //     with logic HIGH.)
 194   1         // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 195   1         //     with logic HIGH.)
 196   1         // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 197   1         //     with logic HIGH.)
 198   1         */
 199   1        P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 200   1            | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH;
 201   1        // [P1MAT - Port 1 Match]$
 202   1      }
 203          
 204          //================================================================================
 205          // PBCFG_0_enter_DefaultMode_from_RESET
 206          //================================================================================
 207          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 208   1              // $[XBR2 - Port I/O Crossbar 2]
 209   1              /*
 210   1              // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 211   1              //     Pullups enabled (except for Ports whose I/O are configured for analog
 212   1              //     mode).)
 213   1              // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 214   1              */
 215   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 216   1              // [XBR2 - Port I/O Crossbar 2]$
 217   1      
 218   1              // $[XBR0 - Port I/O Crossbar 0]
 219   1              // [XBR0 - Port I/O Crossbar 0]$
 220   1      
 221   1              // $[XBR1 - Port I/O Crossbar 1]
 222   1              // [XBR1 - Port I/O Crossbar 1]$
 223   1      }
 224          
 225          //================================================================================
 226          // TIMER16_2_enter_DefaultMode_from_RESET
 227          //================================================================================
 228          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 229   1              // $[Timer Initialization]
 230   1              // Save Timer Configuration
 231   1              uint8_t TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 232   1              // Stop Timer
 233   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 234   1              // [Timer Initialization]$
 235   1      
 236   1              // $[TMR2CN0 - Timer 2 Control]
 237   1              // [TMR2CN0 - Timer 2 Control]$
 238   1      
 239   1              // $[TMR2H - Timer 2 High Byte]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/12/2022 05:49:38 PAGE 5   

 240   1              /*
 241   1              // TMR2H (Timer 2 High Byte) = 0xFF
 242   1              */
 243   1              TMR2H = (0xFF << TMR2H_TMR2H__SHIFT);
 244   1              // [TMR2H - Timer 2 High Byte]$
 245   1      
 246   1              // $[TMR2L - Timer 2 Low Byte]
 247   1              /*
 248   1              // TMR2L (Timer 2 Low Byte) = 0xFF
 249   1              */
 250   1              TMR2L = (0xFF << TMR2L_TMR2L__SHIFT);
 251   1              // [TMR2L - Timer 2 Low Byte]$
 252   1      
 253   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 254   1              /*
 255   1              // TMR2RLH (Timer 2 Reload High Byte) = 0xAE
 256   1              */
 257   1              TMR2RLH = (0xAE << TMR2RLH_TMR2RLH__SHIFT);
 258   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 259   1      
 260   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 261   1              /*
 262   1              // TMR2RLL (Timer 2 Reload Low Byte) = 0x9F
 263   1              */
 264   1              TMR2RLL = (0x9F << TMR2RLL_TMR2RLL__SHIFT);
 265   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 266   1      
 267   1              // $[TMR2CN0]
 268   1              /*
 269   1              // TR2 (Timer 2 Run Control) = RUN (Start Timer 2 running.)
 270   1              */
 271   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 272   1              // [TMR2CN0]$
 273   1      
 274   1              // $[Timer Restoration]
 275   1              // Restore Timer Configuration
 276   1              TMR2CN0 |= TMR2CN0_TR2_save;
 277   1              // [Timer Restoration]$
 278   1      }
 279          
 280          //================================================================================
 281          // INTERRUPT_0_enter_DefaultMode_from_RESET
 282          //================================================================================
 283          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 284   1              // $[EIE1 - Extended Interrupt Enable 1]
 285   1              // [EIE1 - Extended Interrupt Enable 1]$
 286   1      
 287   1              // $[EIP1 - Extended Interrupt Priority 1]
 288   1              // [EIP1 - Extended Interrupt Priority 1]$
 289   1      
 290   1              // $[IE - Interrupt Enable]
 291   1              /*
 292   1              // EA (All Interrupts Enable) = ENABLED (Enable each interrupt according
 293   1              //     to its individual mask setting.)
 294   1              // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 295   1              //     interrupt 0.)
 296   1              // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 297   1              //     interrupt 1.)
 298   1              // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 299   1              //     interrupts.)
 300   1              // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 301   1              //     interrupt.)
 302   1              // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
C51 COMPILER V9.60.0.0   INITDEVICE                                                        07/12/2022 05:49:38 PAGE 6   

 303   1              //     interrupt.)
 304   1              // ET2 (Timer 2 Interrupt Enable) = ENABLED (Enable interrupt requests
 305   1              //     generated by the TF2L or TF2H flags.)
 306   1              // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 307   1              */
 308   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 309   1                       | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED | IE_ES0__DISABLED;
 310   1              // [IE - Interrupt Enable]$
 311   1      
 312   1              // $[IP - Interrupt Priority]
 313   1              // [IP - Interrupt Priority]$
 314   1      
 315   1              // $[EIE2 - Extended Interrupt Enable 2]
 316   1              // [EIE2 - Extended Interrupt Enable 2]$
 317   1      
 318   1              // $[EIP2 - Extended Interrupt Priority 2]
 319   1              // [EIP2 - Extended Interrupt Priority 2]$
 320   1      }
 321          
 322          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     80    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
